<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.1 on win32)" generated="20230130 11:47:48.499" rpa="false" schemaversion="3">
<suite id="s1" name="WebTest" source="C:\Users\janal\PycharmProjects\WebAutomation\Test\WebTest.robot">
<test id="s1-t1" name="Web Test" line="10">
<kw name="Open Chrome" library="TestKeywords">
<msg timestamp="20230130 11:47:48.678" level="TRACE">Arguments: [  ]</msg>
<kw name="Open Browser" library="Selenium2Library">
<arg>${url}</arg>
<arg>${browser}</arg>
<arg>options=add_experimental_option("detach", True)</arg>
<arg>options=add_experimental_option('excludeSwitches', ['enable-logging'])</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20230130 11:47:48.679" level="TRACE">Arguments: [ 'https://testautomationpractice.blogspot.com/' | 'chrome' | options='add_experimental_option("detach", True)' | options="add_experimental_option('excludeSwitches', ['enable-logging'])" ]</msg>
<msg timestamp="20230130 11:47:48.679" level="INFO">Opening browser 'chrome' to base url 'https://testautomationpractice.blogspot.com/'.</msg>
<msg timestamp="20230130 11:47:48.695" level="DEBUG">Started executable: `chromedriver` in a child process with pid: 12784</msg>
<msg timestamp="20230130 11:47:49.205" level="DEBUG">POST http://localhost:53284/session {"capabilities": {"firstMatch": [{}], "alwaysMatch": {"browserName": "chrome", "pageLoadStrategy": "normal", "goog:chromeOptions": {"excludeSwitches": ["enable-logging"], "extensions": [], "args": []}}}}</msg>
<msg timestamp="20230130 11:47:49.206" level="DEBUG">Starting new HTTP connection (1): localhost:53284</msg>
<msg timestamp="20230130 11:47:49.792" level="DEBUG">http://localhost:53284 "POST /session HTTP/1.1" 200 791</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"109.0.5414.120","chrome":{"chromedriverVersion":"109.0.5414.74 (e7c5703604daa9cc128ccf5a5d3e993513758913-refs/branch-heads/5414@{#1172})","userDataDir":"C:\\Users\\janal\\AppData\\Local\\Temp\\scoped_dir12784_429181626"},"goog:chromeOptions":{"debuggerAddress":"localhost:53288"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"windows","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:virtualAuthenticators":true},"sessionId":"c708c057a0bad6dfdfb16373bd5ec924"}} | headers=HTTPHeaderDict({'Content-Length': '791', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/timeouts {"script": 5000}</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/timeouts {"implicit": 0}</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/timeouts HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:49.793" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/url {"url": "https://testautomationpractice.blogspot.com/"}</msg>
<msg timestamp="20230130 11:47:54.584" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/url HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:54.584" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.584" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.584" level="DEBUG">Opened browser with session id c708c057a0bad6dfdfb16373bd5ec924.</msg>
<msg timestamp="20230130 11:47:54.584" level="TRACE">Return: 1</msg>
<status status="PASS" starttime="20230130 11:47:48.678" endtime="20230130 11:47:54.585"/>
</kw>
<kw name="Maximize Browser Window" library="Selenium2Library">
<doc>Maximizes current browser window.</doc>
<msg timestamp="20230130 11:47:54.586" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230130 11:47:54.586" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/window/maximize {}</msg>
<msg timestamp="20230130 11:47:54.710" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/window/maximize HTTP/1.1" 200 51</msg>
<msg timestamp="20230130 11:47:54.710" level="DEBUG">Remote response: status=200 | data={"value":{"height":688,"width":1296,"x":-8,"y":-8}} | headers=HTTPHeaderDict({'Content-Length': '51', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.710" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.711" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.585" endtime="20230130 11:47:54.711"/>
</kw>
<msg timestamp="20230130 11:47:54.711" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:48.678" endtime="20230130 11:47:54.711"/>
</kw>
<kw name="New Windows" library="TestKeywords">
<msg timestamp="20230130 11:47:54.711" level="TRACE">Arguments: [  ]</msg>
<kw name="Input Text" library="Selenium2Library">
<arg>//input[@id='Wikipedia1_wikipedia-search-input']</arg>
<arg>google.com</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230130 11:47:54.712" level="TRACE">Arguments: [ "//input[@id='Wikipedia1_wikipedia-search-input']" | 'google.com' ]</msg>
<msg timestamp="20230130 11:47:54.712" level="INFO">Typing text 'google.com' into text field '//input[@id='Wikipedia1_wikipedia-search-input']'.</msg>
<msg timestamp="20230130 11:47:54.712" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//input[@id='Wikipedia1_wikipedia-search-input']"}</msg>
<msg timestamp="20230130 11:47:54.722" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:54.722" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"97df6d92-beee-469c-9dd5-aca99642faba"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.722" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.722" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/97df6d92-beee-469c-9dd5-aca99642faba/clear {"id": "97df6d92-beee-469c-9dd5-aca99642faba"}</msg>
<msg timestamp="20230130 11:47:54.747" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/97df6d92-beee-469c-9dd5-aca99642faba/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:54.747" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.747" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.747" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/97df6d92-beee-469c-9dd5-aca99642faba/value {"text": "google.com", "value": ["g", "o", "o", "g", "l", "e", ".", "c", "o", "m"], "id": "97df6d92-beee-469c-9dd5-aca99642faba"}</msg>
<msg timestamp="20230130 11:47:54.797" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/97df6d92-beee-469c-9dd5-aca99642faba/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:54.798" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.798" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.798" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.712" endtime="20230130 11:47:54.798"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>//input[@type='submit']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20230130 11:47:54.798" level="TRACE">Arguments: [ "//input[@type='submit']" ]</msg>
<msg timestamp="20230130 11:47:54.798" level="INFO">Clicking element '//input[@type='submit']'.</msg>
<msg timestamp="20230130 11:47:54.798" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//input[@type='submit']"}</msg>
<msg timestamp="20230130 11:47:54.807" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:54.807" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"cceddb65-674c-46e9-a65e-126f01020bda"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.807" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.807" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/cceddb65-674c-46e9-a65e-126f01020bda/click {"id": "cceddb65-674c-46e9-a65e-126f01020bda"}</msg>
<msg timestamp="20230130 11:47:54.862" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/cceddb65-674c-46e9-a65e-126f01020bda/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:54.863" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.863" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.863" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.798" endtime="20230130 11:47:54.863"/>
</kw>
<msg timestamp="20230130 11:47:54.863" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.711" endtime="20230130 11:47:54.863"/>
</kw>
<kw name="Alert" library="TestKeywords">
<msg timestamp="20230130 11:47:54.864" level="TRACE">Arguments: [  ]</msg>
<kw name="Click Button" library="Selenium2Library">
<arg>//button[@onclick='myFunction()']</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20230130 11:47:54.864" level="TRACE">Arguments: [ "//button[@onclick='myFunction()']" ]</msg>
<msg timestamp="20230130 11:47:54.864" level="INFO">Clicking button '//button[@onclick='myFunction()']'.</msg>
<msg timestamp="20230130 11:47:54.864" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//button[@onclick='myFunction()']"}</msg>
<msg timestamp="20230130 11:47:54.873" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:54.874" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"de7c79c3-6dfe-487d-9ed4-d50131bb011d"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.874" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.874" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/de7c79c3-6dfe-487d-9ed4-d50131bb011d/name {"id": "de7c79c3-6dfe-487d-9ed4-d50131bb011d"}</msg>
<msg timestamp="20230130 11:47:54.880" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/de7c79c3-6dfe-487d-9ed4-d50131bb011d/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:54.880" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.880" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.880" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//button[@onclick='myFunction()']"}</msg>
<msg timestamp="20230130 11:47:54.887" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:54.887" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"de7c79c3-6dfe-487d-9ed4-d50131bb011d"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.887" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.887" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/de7c79c3-6dfe-487d-9ed4-d50131bb011d/name {"id": "de7c79c3-6dfe-487d-9ed4-d50131bb011d"}</msg>
<msg timestamp="20230130 11:47:54.890" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/de7c79c3-6dfe-487d-9ed4-d50131bb011d/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:54.890" level="DEBUG">Remote response: status=200 | data={"value":"button"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.890" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.891" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/de7c79c3-6dfe-487d-9ed4-d50131bb011d/click {"id": "de7c79c3-6dfe-487d-9ed4-d50131bb011d"}</msg>
<msg timestamp="20230130 11:47:54.921" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/de7c79c3-6dfe-487d-9ed4-d50131bb011d/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:54.921" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.921" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.923" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.864" endtime="20230130 11:47:54.923"/>
</kw>
<kw name="Handle Alert" library="Selenium2Library">
<arg>accept</arg>
<doc>Handles the current alert and returns its message.</doc>
<msg timestamp="20230130 11:47:54.923" level="TRACE">Arguments: [ 'accept' ]</msg>
<msg timestamp="20230130 11:47:54.923" level="INFO">HANDLE::&lt;class 'NoneType'&gt;::None</msg>
<msg timestamp="20230130 11:47:54.923" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/alert/text {}</msg>
<msg timestamp="20230130 11:47:54.924" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/alert/text HTTP/1.1" 200 27</msg>
<msg timestamp="20230130 11:47:54.925" level="DEBUG">Remote response: status=200 | data={"value":"Press a button!"} | headers=HTTPHeaderDict({'Content-Length': '27', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.925" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.925" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/alert/text {}</msg>
<msg timestamp="20230130 11:47:54.926" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/alert/text HTTP/1.1" 200 27</msg>
<msg timestamp="20230130 11:47:54.926" level="DEBUG">Remote response: status=200 | data={"value":"Press a button!"} | headers=HTTPHeaderDict({'Content-Length': '27', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.926" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.926" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/alert/accept {}</msg>
<msg timestamp="20230130 11:47:54.928" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/alert/accept HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:54.928" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.928" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.928" level="TRACE">Return: 'Press a button!'</msg>
<status status="PASS" starttime="20230130 11:47:54.923" endtime="20230130 11:47:54.928"/>
</kw>
<msg timestamp="20230130 11:47:54.928" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.863" endtime="20230130 11:47:54.928"/>
</kw>
<kw name="Date Picker" library="TestKeywords">
<msg timestamp="20230130 11:47:54.929" level="TRACE">Arguments: [  ]</msg>
<kw name="Input Text" library="Selenium2Library">
<arg>//input[@id='datepicker']</arg>
<arg>01/22/1998</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230130 11:47:54.929" level="TRACE">Arguments: [ "//input[@id='datepicker']" | '01/22/1998' ]</msg>
<msg timestamp="20230130 11:47:54.930" level="INFO">Typing text '01/22/1998' into text field '//input[@id='datepicker']'.</msg>
<msg timestamp="20230130 11:47:54.930" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//input[@id='datepicker']"}</msg>
<msg timestamp="20230130 11:47:54.940" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:54.940" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"29922aba-fbde-459b-9548-f79509c7380c"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.940" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.940" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/29922aba-fbde-459b-9548-f79509c7380c/clear {"id": "29922aba-fbde-459b-9548-f79509c7380c"}</msg>
<msg timestamp="20230130 11:47:54.966" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/29922aba-fbde-459b-9548-f79509c7380c/clear HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:54.968" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:54.968" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:54.968" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/29922aba-fbde-459b-9548-f79509c7380c/value {"text": "01/22/1998", "value": ["0", "1", "/", "2", "2", "/", "1", "9", "9", "8"], "id": "29922aba-fbde-459b-9548-f79509c7380c"}</msg>
<msg timestamp="20230130 11:47:55.032" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/29922aba-fbde-459b-9548-f79509c7380c/value HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.033" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.033" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.033" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.929" endtime="20230130 11:47:55.033"/>
</kw>
<msg timestamp="20230130 11:47:55.033" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:54.929" endtime="20230130 11:47:55.033"/>
</kw>
<kw name="Select Menu" library="TestKeywords">
<msg timestamp="20230130 11:47:55.033" level="TRACE">Arguments: [  ]</msg>
<kw name="Select From List By Label" library="Selenium2Library">
<arg>//select[@id='speed']</arg>
<arg>Fast</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20230130 11:47:55.033" level="TRACE">Arguments: [ "//select[@id='speed']" | 'Fast' ]</msg>
<msg timestamp="20230130 11:47:55.033" level="INFO">Selecting options from selection list '//select[@id='speed']' by label Fast.</msg>
<msg timestamp="20230130 11:47:55.034" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//select[@id='speed']"}</msg>
<msg timestamp="20230130 11:47:55.044" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.044" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"2dbc82ec-b172-4e28-a37a-136cc7640630"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.044" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.045" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/name {"id": "2dbc82ec-b172-4e28-a37a-136cc7640630"}</msg>
<msg timestamp="20230130 11:47:55.049" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.050" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.050" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.050" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/name {"id": "2dbc82ec-b172-4e28-a37a-136cc7640630"}</msg>
<msg timestamp="20230130 11:47:55.053" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.053" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.053" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.053" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/attribute/multiple {"name": "multiple", "id": "2dbc82ec-b172-4e28-a37a-136cc7640630"}</msg>
<msg timestamp="20230130 11:47:55.059" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/attribute/multiple HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.059" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.059" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.059" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/elements {"using": "xpath", "value": ".//option[normalize-space(.) = \"Fast\"]", "id": "2dbc82ec-b172-4e28-a37a-136cc7640630"}</msg>
<msg timestamp="20230130 11:47:55.067" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/2dbc82ec-b172-4e28-a37a-136cc7640630/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.067" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"c6bc475b-e7df-4a06-a2a6-9c0a24dae006"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.067" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.067" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/c6bc475b-e7df-4a06-a2a6-9c0a24dae006/selected {"id": "c6bc475b-e7df-4a06-a2a6-9c0a24dae006"}</msg>
<msg timestamp="20230130 11:47:55.077" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/c6bc475b-e7df-4a06-a2a6-9c0a24dae006/selected HTTP/1.1" 200 15</msg>
<msg timestamp="20230130 11:47:55.077" level="DEBUG">Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.077" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.077" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/c6bc475b-e7df-4a06-a2a6-9c0a24dae006/enabled {"id": "c6bc475b-e7df-4a06-a2a6-9c0a24dae006"}</msg>
<msg timestamp="20230130 11:47:55.084" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/c6bc475b-e7df-4a06-a2a6-9c0a24dae006/enabled HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.084" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.084" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.084" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/c6bc475b-e7df-4a06-a2a6-9c0a24dae006/click {"id": "c6bc475b-e7df-4a06-a2a6-9c0a24dae006"}</msg>
<msg timestamp="20230130 11:47:55.107" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/c6bc475b-e7df-4a06-a2a6-9c0a24dae006/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.108" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.108" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.108" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:55.033" endtime="20230130 11:47:55.109"/>
</kw>
<kw name="Select From List By Label" library="Selenium2Library">
<arg>//select[@id='files']</arg>
<arg>DOC file</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20230130 11:47:55.109" level="TRACE">Arguments: [ "//select[@id='files']" | 'DOC file' ]</msg>
<msg timestamp="20230130 11:47:55.109" level="INFO">Selecting options from selection list '//select[@id='files']' by label DOC file.</msg>
<msg timestamp="20230130 11:47:55.109" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//select[@id='files']"}</msg>
<msg timestamp="20230130 11:47:55.122" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.122" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"16deb085-0de1-4566-b69b-3d6192057809"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.122" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.122" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/name {"id": "16deb085-0de1-4566-b69b-3d6192057809"}</msg>
<msg timestamp="20230130 11:47:55.130" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.131" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.131" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.131" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/name {"id": "16deb085-0de1-4566-b69b-3d6192057809"}</msg>
<msg timestamp="20230130 11:47:55.135" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.135" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.135" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.135" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/attribute/multiple {"name": "multiple", "id": "16deb085-0de1-4566-b69b-3d6192057809"}</msg>
<msg timestamp="20230130 11:47:55.138" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/attribute/multiple HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.139" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.139" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.139" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/elements {"using": "xpath", "value": ".//option[normalize-space(.) = \"DOC file\"]", "id": "16deb085-0de1-4566-b69b-3d6192057809"}</msg>
<msg timestamp="20230130 11:47:55.149" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/16deb085-0de1-4566-b69b-3d6192057809/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.149" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"358cd354-3f63-4099-93c0-8adcab7bc10e"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.149" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.149" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/358cd354-3f63-4099-93c0-8adcab7bc10e/selected {"id": "358cd354-3f63-4099-93c0-8adcab7bc10e"}</msg>
<msg timestamp="20230130 11:47:55.157" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/358cd354-3f63-4099-93c0-8adcab7bc10e/selected HTTP/1.1" 200 15</msg>
<msg timestamp="20230130 11:47:55.158" level="DEBUG">Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.158" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.158" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/358cd354-3f63-4099-93c0-8adcab7bc10e/enabled {"id": "358cd354-3f63-4099-93c0-8adcab7bc10e"}</msg>
<msg timestamp="20230130 11:47:55.166" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/358cd354-3f63-4099-93c0-8adcab7bc10e/enabled HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.166" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.166" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.166" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/358cd354-3f63-4099-93c0-8adcab7bc10e/click {"id": "358cd354-3f63-4099-93c0-8adcab7bc10e"}</msg>
<msg timestamp="20230130 11:47:55.184" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/358cd354-3f63-4099-93c0-8adcab7bc10e/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.184" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.185" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.185" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:55.109" endtime="20230130 11:47:55.185"/>
</kw>
<kw name="Select From List By Label" library="Selenium2Library">
<arg>//select[@id='number']</arg>
<arg>3</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20230130 11:47:55.185" level="TRACE">Arguments: [ "//select[@id='number']" | '3' ]</msg>
<msg timestamp="20230130 11:47:55.185" level="INFO">Selecting options from selection list '//select[@id='number']' by label 3.</msg>
<msg timestamp="20230130 11:47:55.185" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//select[@id='number']"}</msg>
<msg timestamp="20230130 11:47:55.197" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.198" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"0f3de77b-c5ba-427c-92ad-679d5ba556f0"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.198" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.198" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/name {"id": "0f3de77b-c5ba-427c-92ad-679d5ba556f0"}</msg>
<msg timestamp="20230130 11:47:55.202" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.202" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.202" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.202" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/name {"id": "0f3de77b-c5ba-427c-92ad-679d5ba556f0"}</msg>
<msg timestamp="20230130 11:47:55.205" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.206" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.206" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.206" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/attribute/multiple {"name": "multiple", "id": "0f3de77b-c5ba-427c-92ad-679d5ba556f0"}</msg>
<msg timestamp="20230130 11:47:55.211" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/attribute/multiple HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.212" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.212" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.212" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/elements {"using": "xpath", "value": ".//option[normalize-space(.) = \"3\"]", "id": "0f3de77b-c5ba-427c-92ad-679d5ba556f0"}</msg>
<msg timestamp="20230130 11:47:55.219" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/0f3de77b-c5ba-427c-92ad-679d5ba556f0/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.219" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"f4c70c07-5bcb-4239-9703-7472ca671f33"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.219" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.219" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/f4c70c07-5bcb-4239-9703-7472ca671f33/selected {"id": "f4c70c07-5bcb-4239-9703-7472ca671f33"}</msg>
<msg timestamp="20230130 11:47:55.227" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/f4c70c07-5bcb-4239-9703-7472ca671f33/selected HTTP/1.1" 200 15</msg>
<msg timestamp="20230130 11:47:55.227" level="DEBUG">Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.227" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.229" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/f4c70c07-5bcb-4239-9703-7472ca671f33/enabled {"id": "f4c70c07-5bcb-4239-9703-7472ca671f33"}</msg>
<msg timestamp="20230130 11:47:55.235" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/f4c70c07-5bcb-4239-9703-7472ca671f33/enabled HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.235" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.235" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.235" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/f4c70c07-5bcb-4239-9703-7472ca671f33/click {"id": "f4c70c07-5bcb-4239-9703-7472ca671f33"}</msg>
<msg timestamp="20230130 11:47:55.253" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/f4c70c07-5bcb-4239-9703-7472ca671f33/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.253" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.253" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.253" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:55.185" endtime="20230130 11:47:55.253"/>
</kw>
<kw name="Select From List By Label" library="Selenium2Library">
<arg>//select[@id='products']</arg>
<arg>Bing</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20230130 11:47:55.254" level="TRACE">Arguments: [ "//select[@id='products']" | 'Bing' ]</msg>
<msg timestamp="20230130 11:47:55.254" level="INFO">Selecting options from selection list '//select[@id='products']' by label Bing.</msg>
<msg timestamp="20230130 11:47:55.254" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//select[@id='products']"}</msg>
<msg timestamp="20230130 11:47:55.264" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.264" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"d5599ac7-319f-4c0d-9f05-80fabaa1f318"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.264" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.264" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/name {"id": "d5599ac7-319f-4c0d-9f05-80fabaa1f318"}</msg>
<msg timestamp="20230130 11:47:55.269" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.269" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.269" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.269" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/name {"id": "d5599ac7-319f-4c0d-9f05-80fabaa1f318"}</msg>
<msg timestamp="20230130 11:47:55.279" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.279" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.279" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.279" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/attribute/multiple {"name": "multiple", "id": "d5599ac7-319f-4c0d-9f05-80fabaa1f318"}</msg>
<msg timestamp="20230130 11:47:55.282" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/attribute/multiple HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.282" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.282" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.282" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/elements {"using": "xpath", "value": ".//option[normalize-space(.) = \"Bing\"]", "id": "d5599ac7-319f-4c0d-9f05-80fabaa1f318"}</msg>
<msg timestamp="20230130 11:47:55.293" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/d5599ac7-319f-4c0d-9f05-80fabaa1f318/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.293" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"3b475e62-8ef5-4f8f-8b72-78e23128f480"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.293" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.293" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/3b475e62-8ef5-4f8f-8b72-78e23128f480/selected {"id": "3b475e62-8ef5-4f8f-8b72-78e23128f480"}</msg>
<msg timestamp="20230130 11:47:55.300" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/3b475e62-8ef5-4f8f-8b72-78e23128f480/selected HTTP/1.1" 200 15</msg>
<msg timestamp="20230130 11:47:55.300" level="DEBUG">Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.300" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.300" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/3b475e62-8ef5-4f8f-8b72-78e23128f480/enabled {"id": "3b475e62-8ef5-4f8f-8b72-78e23128f480"}</msg>
<msg timestamp="20230130 11:47:55.310" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/3b475e62-8ef5-4f8f-8b72-78e23128f480/enabled HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.310" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.310" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.310" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/3b475e62-8ef5-4f8f-8b72-78e23128f480/click {"id": "3b475e62-8ef5-4f8f-8b72-78e23128f480"}</msg>
<msg timestamp="20230130 11:47:55.329" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/3b475e62-8ef5-4f8f-8b72-78e23128f480/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.330" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.330" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.330" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:55.253" endtime="20230130 11:47:55.330"/>
</kw>
<kw name="Select From List By Label" library="Selenium2Library">
<arg>//select[@id='animals']</arg>
<arg>Avatar</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<msg timestamp="20230130 11:47:55.330" level="TRACE">Arguments: [ "//select[@id='animals']" | 'Avatar' ]</msg>
<msg timestamp="20230130 11:47:55.330" level="INFO">Selecting options from selection list '//select[@id='animals']' by label Avatar.</msg>
<msg timestamp="20230130 11:47:55.330" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "//select[@id='animals']"}</msg>
<msg timestamp="20230130 11:47:55.340" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.340" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"1fb3b262-8cdb-437a-b36a-4762279c10f3"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.340" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.340" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/name {"id": "1fb3b262-8cdb-437a-b36a-4762279c10f3"}</msg>
<msg timestamp="20230130 11:47:55.347" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.348" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.348" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.348" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/name {"id": "1fb3b262-8cdb-437a-b36a-4762279c10f3"}</msg>
<msg timestamp="20230130 11:47:55.352" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/name HTTP/1.1" 200 18</msg>
<msg timestamp="20230130 11:47:55.352" level="DEBUG">Remote response: status=200 | data={"value":"select"} | headers=HTTPHeaderDict({'Content-Length': '18', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.352" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.352" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/attribute/multiple {"name": "multiple", "id": "1fb3b262-8cdb-437a-b36a-4762279c10f3"}</msg>
<msg timestamp="20230130 11:47:55.356" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/attribute/multiple HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.356" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.356" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.356" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/elements {"using": "xpath", "value": ".//option[normalize-space(.) = \"Avatar\"]", "id": "1fb3b262-8cdb-437a-b36a-4762279c10f3"}</msg>
<msg timestamp="20230130 11:47:55.367" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/1fb3b262-8cdb-437a-b36a-4762279c10f3/elements HTTP/1.1" 200 90</msg>
<msg timestamp="20230130 11:47:55.367" level="DEBUG">Remote response: status=200 | data={"value":[{"element-6066-11e4-a52e-4f735466cecf":"1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8"}]} | headers=HTTPHeaderDict({'Content-Length': '90', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.367" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.367" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8/selected {"id": "1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8"}</msg>
<msg timestamp="20230130 11:47:55.376" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8/selected HTTP/1.1" 200 15</msg>
<msg timestamp="20230130 11:47:55.376" level="DEBUG">Remote response: status=200 | data={"value":false} | headers=HTTPHeaderDict({'Content-Length': '15', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.376" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.376" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8/enabled {"id": "1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8"}</msg>
<msg timestamp="20230130 11:47:55.383" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/element/1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8/enabled HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.384" level="DEBUG">Remote response: status=200 | data={"value":true} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.384" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.384" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/element/1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8/click {"id": "1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8"}</msg>
<msg timestamp="20230130 11:47:55.400" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/element/1b72ed6f-9b4c-4cdb-804f-b41078ab3ed8/click HTTP/1.1" 200 14</msg>
<msg timestamp="20230130 11:47:55.401" level="DEBUG">Remote response: status=200 | data={"value":null} | headers=HTTPHeaderDict({'Content-Length': '14', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.401" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.401" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:55.330" endtime="20230130 11:47:55.401"/>
</kw>
<msg timestamp="20230130 11:47:55.401" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230130 11:47:55.033" endtime="20230130 11:47:55.401"/>
</kw>
<kw name="Text Labels" library="TestKeywords">
<msg timestamp="20230130 11:47:55.401" level="TRACE">Arguments: [  ]</msg>
<kw name="Input Text" library="Selenium2Library">
<arg>xpath:/html/body/form/div[2]/div[4]/input</arg>
<arg>Jan Altwin</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20230130 11:47:55.401" level="TRACE">Arguments: [ 'xpath:/html/body/form/div[2]/div[4]/input' | 'Jan Altwin' ]</msg>
<msg timestamp="20230130 11:47:55.401" level="INFO">Typing text 'Jan Altwin' into text field 'xpath:/html/body/form/div[2]/div[4]/input'.</msg>
<msg timestamp="20230130 11:47:55.402" level="DEBUG">POST http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/elements {"using": "xpath", "value": "/html/body/form/div[2]/div[4]/input"}</msg>
<msg timestamp="20230130 11:47:55.411" level="DEBUG">http://localhost:53284 "POST /session/c708c057a0bad6dfdfb16373bd5ec924/elements HTTP/1.1" 200 12</msg>
<msg timestamp="20230130 11:47:55.411" level="DEBUG">Remote response: status=200 | data={"value":[]} | headers=HTTPHeaderDict({'Content-Length': '12', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.411" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.412" level="DEBUG">GET http://localhost:53284/session/c708c057a0bad6dfdfb16373bd5ec924/screenshot {}</msg>
<msg timestamp="20230130 11:47:55.533" level="DEBUG">http://localhost:53284 "GET /session/c708c057a0bad6dfdfb16373bd5ec924/screenshot HTTP/1.1" 200 147312</msg>
<msg timestamp="20230130 11:47:55.533" level="DEBUG">Remote response: status=200 | data={"value":""} | headers=HTTPHeaderDict({'Content-Length': '147312', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})</msg>
<msg timestamp="20230130 11:47:55.533" level="DEBUG">Finished Request</msg>
<msg timestamp="20230130 11:47:55.538" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-2.png"&gt;&lt;img src="selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20230130 11:47:55.539" level="FAIL">Element with locator 'xpath:/html/body/form/div[2]/div[4]/input' not found.</msg>
<msg timestamp="20230130 11:47:55.541" level="DEBUG">Traceback (most recent call last):
  File "C:\Users\janal\AppData\Local\Programs\Python\Python311\Lib\site-packages\SeleniumLibrary\__init__.py", line 496, in run_keyword
    return DynamicCore.run_keyword(self, name, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\janal\AppData\Local\Programs\Python\Python311\Lib\site-packages\robotlibcore.py", line 105, in run_keyword
    return self.keywords[name](*args, **(kwargs or {}))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\janal\AppData\Local\Programs\Python\Python311\Lib\site-packages\SeleniumLibrary\keywords\formelement.py", line 297, in input_text
    self._input_text_into_text_field(locator, text, clear)
  File "C:\Users\janal\AppData\Local\Programs\Python\Python311\Lib\site-packages\SeleniumLibrary\keywords\formelement.py", line 504, in _input_text_into_text_field
    element = self.find_element(locator)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\janal\AppData\Local\Programs\Python\Python311\Lib\site-packages\SeleniumLibrary\base\context.py", line 82, in find_element
    return self.element_finder.find(locator, tag, True, required, parent)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\janal\AppData\Local\Programs\Python\Python311\Lib\site-packages\SeleniumLibrary\locators\elementfinder.py", line 93, in find
    return self._find(locators[-1], tag, first_only, required, element)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\janal\AppData\Local\Programs\Python\Python311\Lib\site-packages\SeleniumLibrary\locators\elementfinder.py", line 125, in _find
    raise ElementNotFound(f"{element_type} with locator '{locator}' not found.")
SeleniumLibrary.errors.ElementNotFound: Element with locator 'xpath:/html/body/form/div[2]/div[4]/input' not found.</msg>
<status status="FAIL" starttime="20230130 11:47:55.401" endtime="20230130 11:47:55.541"/>
</kw>
<status status="FAIL" starttime="20230130 11:47:55.401" endtime="20230130 11:47:55.541"/>
</kw>
<status status="FAIL" starttime="20230130 11:47:48.677" endtime="20230130 11:47:55.542">Element with locator 'xpath:/html/body/form/div[2]/div[4]/input' not found.</status>
</test>
<status status="FAIL" starttime="20230130 11:47:48.500" endtime="20230130 11:47:55.544"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="WebTest">WebTest</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
